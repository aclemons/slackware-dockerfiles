name: Slackware 9.1 Docker Images

on:
  schedule:
    - cron: '0 3 * * *'
  push:
    branches:
      - 'master'

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Fetch x86 ChangeLogs
        run: |
          mkdir -p slackware-9.1
          curl -s -f -o slackware-9.1/ChangeLog.txt.386 https://slackware.osuosl.org/slackware-9.1/ChangeLog.txt

      - name: Cache Base Tarballs
        id: cache-base-tarballs
        uses: actions/cache@v3
        with:
          path: base_tarballs/
          key: ${{ runner.os }}-base-tarballs-9.1-${{ hashFiles('**/slackware-9.1/ChangeLog*', '**/scripts/build_base_image.sh') }}

      - name: Cache Docker Builds
        id: cache-docker-build
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-dockerbuild-9.1-${{ github.run_id }}
          restore-keys: |
            ${{ runner.os }}-dockerbuild-9.1

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build prerequisites
        if: steps.cache-base-tarballs.outputs.cache-hit != 'true'
        run: |
          docker run --privileged --security-opt apparmor:unconfined --rm -e RELEASENAME=slackware -e ARCH=i586 -e VERSION=9.1 -e CHOWN_TO="$(id -u):$(id -g)" -v "$(pwd):/data" -v "$(pwd)/scripts:/scripts" alpine:3.15 sh /scripts/build_base_image.sh
          cp *.tar base_tarballs/

      - name: Restore prerequisites
        if: steps.cache-base-tarballs.outputs.cache-hit == 'true'
        run: |
          cp base_tarballs/*tar .

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          push: true
          platforms: linux/386
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-next,mode=max
          context: .
          file: Dockerfile
          build-args: |
            VERSION=9.1
          tags: |
            ghcr.io/${{ github.repository_owner }}/slackware:9.1
            ${{ github.repository_owner }}/slackware:9.1

      - name: Trim cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-next /tmp/.buildx-cache
