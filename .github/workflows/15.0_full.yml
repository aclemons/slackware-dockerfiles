name: Slackware 15.0 Full Docker Images

on:
  schedule:
    - cron: '0 8 * * 1'

jobs:
  docker_full_arm:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
        with:
          driver-opts: |
            network=host

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Fetch ChangeLogs
        run: |
          curl -s -f -o slackware-15.0/ChangeLog.txt.386 https://slackware.uk/slackware/slackware-15.0/ChangeLog.txt
          curl -s -f -o slackware-15.0/ChangeLog.txt.amd64 https://slackware.uk/slackware/slackware64-15.0/ChangeLog.txt
          curl -s -f -o slackware-15.0/ChangeLog.txt.arm https://slackware.uk/slackwarearm/slackwarearm-15.0/ChangeLog.txt

      - name: Cache Changelogs
        id: cache-changelogs
        uses: actions/cache@v3
        with:
          path: /tmp/changelogs
          key: ${{ runner.os }}-dockerbuild-15.0-full-${{ hashFiles('**/slackware-15.0/ChangeLog*', '**/scripts/install_all.sh', '**/.github/workflows/15.0.yml', 'Dockerfile') }}-${{ github.run_id }}
          restore-keys: |
              ${{ runner.os }}-dockerbuild-15.0-full-${{ hashFiles('**/slackware-15.0/ChangeLog*', '**/scripts/install_all.sh', '**/.github/workflows/15.0.yml', 'Dockerfile') }}

      - name: Check status after cache hit
        if: steps.cache-changelogs.outputs.cache-hit == 'true'
        run: |
          echo "BUILD_IMAGE=0" >> $GITHUB_ENV

      - name: Check status after cache miss
        if: steps.cache-changelogs.outputs.cache-hit != 'true'
        run: |
          # the miss could just be a hit on a fallback
          mkdir -p /tmp/changelogs
          printf "%s\n" "${{ hashFiles('**/slackware-15.0/ChangeLog*', '**/scripts/install_all.sh', '**/.github/workflows/15.0.yml', 'Dockerfile') }}" > /tmp/changelogs/newkey
          touch /tmp/changelogs/key
          if diff /tmp/changelogs/newkey /tmp/changelogs/key > /dev/null ; then
            echo "BUILD_IMAGE=0" >> $GITHUB_ENV
          else
            echo "BUILD_IMAGE=1" >> $GITHUB_ENV
          fi
          mv /tmp/changelogs/newkey /tmp/changelogs/key

      - name: Run local mirror
        run: docker run -d --rm -v "$(pwd)/local_mirrors:/usr/share/nginx/html:ro" -p 3000:80 --name mirror nginx:alpine

      - name: Rsync arm repo
        if: env.BUILD_IMAGE == '1'
        run: |
          bash scripts/sync_local_mirror.sh slackwarearm-15.0

      - name: Build arm image
        if: env.BUILD_IMAGE == '1'
        uses: docker/build-push-action@v3
        with:
          platforms: linux/arm/v7
          build-args: |
            base_image=aclemons/slackware:15.0-base
            mirror_base=http://localhost:3000
          network: host
          context: .
          file: Dockerfile
          outputs: type=docker,dest=/tmp/slackware-arm.tar
          tags: |
            slackware:15.0-full-arm

      - name: Upload arm tarball
        if: env.BUILD_IMAGE == '1'
        uses: actions/upload-artifact@v3
        with:
          name: myimage
          path: /tmp/slackware-arm.tar
          retention-days: 1

      - name: Stop the local mirror
        run: docker container stop mirror

  docker_full_386:
    needs: docker_base_build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
        with:
          driver-opts: |
            network=host

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Fetch ChangeLogs
        run: |
          curl -s -f -o slackware-15.0/ChangeLog.txt.386 https://slackware.uk/slackware/slackware-15.0/ChangeLog.txt
          curl -s -f -o slackware-15.0/ChangeLog.txt.amd64 https://slackware.uk/slackware/slackware64-15.0/ChangeLog.txt
          curl -s -f -o slackware-15.0/ChangeLog.txt.arm https://slackware.uk/slackwarearm/slackwarearm-15.0/ChangeLog.txt

      - name: Cache Changelogs
        id: cache-changelogs
        uses: actions/cache@v3
        with:
          path: /tmp/changelogs
          key: ${{ runner.os }}-dockerbuild-15.0-full-${{ hashFiles('**/slackware-15.0/ChangeLog*', '**/scripts/install_all.sh', '**/.github/workflows/15.0.yml', 'Dockerfile') }}-${{ github.run_id }}
          restore-keys: |
              ${{ runner.os }}-dockerbuild-15.0-full-${{ hashFiles('**/slackware-15.0/ChangeLog*', '**/scripts/install_all.sh', '**/.github/workflows/15.0.yml', 'Dockerfile') }}

      - name: Check status after cache hit
        if: steps.cache-changelogs.outputs.cache-hit == 'true'
        run: |
          echo "BUILD_IMAGE=0" >> $GITHUB_ENV

      - name: Check status after cache miss
        if: steps.cache-changelogs.outputs.cache-hit != 'true'
        run: |
          # the miss could just be a hit on a fallback
          mkdir -p /tmp/changelogs
          printf "%s\n" "${{ hashFiles('**/slackware-15.0/ChangeLog*', '**/scripts/install_all.sh', '**/.github/workflows/15.0.yml', 'Dockerfile') }}" > /tmp/changelogs/newkey
          touch /tmp/changelogs/key
          if diff /tmp/changelogs/newkey /tmp/changelogs/key > /dev/null ; then
            echo "BUILD_IMAGE=0" >> $GITHUB_ENV
          else
            echo "BUILD_IMAGE=1" >> $GITHUB_ENV
          fi
          mv /tmp/changelogs/newkey /tmp/changelogs/key

      - name: Run local mirror
        run: docker run -d --rm -v "$(pwd)/local_mirrors:/usr/share/nginx/html:ro" -p 3000:80 --name mirror nginx:alpine

      - name: Rsync 386 repo
        if: env.BUILD_IMAGE == '1'
        run: |
          bash scripts/sync_local_mirror.sh slackware-15.0

      - name: Build 386 image
        if: env.BUILD_IMAGE == '1'
        uses: docker/build-push-action@v3
        with:
          platforms: linux/386
          build-args: |
            base_image=aclemons/slackware:15.0-base
            mirror_base=http://localhost:3000
          network: host
          context: .
          file: Dockerfile
          outputs: type=docker,dest=/tmp/slackware-386.tar
          tags: |
            slackware:15.0-full-386

      - name: Upload 386 tarball
        if: env.BUILD_IMAGE == '1'
        uses: actions/upload-artifact@v3
        with:
          name: myimage
          path: /tmp/slackware-386.tar
          retention-days: 1

      - name: Stop the local mirror
        run: docker container stop mirror

  docker_full_amd64:
    needs: docker_base_build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
        with:
          driver-opts: |
            network=host

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Fetch ChangeLogs
        run: |
          curl -s -f -o slackware-15.0/ChangeLog.txt.386 https://slackware.uk/slackware/slackware-15.0/ChangeLog.txt
          curl -s -f -o slackware-15.0/ChangeLog.txt.amd64 https://slackware.uk/slackware/slackware64-15.0/ChangeLog.txt
          curl -s -f -o slackware-15.0/ChangeLog.txt.arm https://slackware.uk/slackwarearm/slackwarearm-15.0/ChangeLog.txt

      - name: Cache Changelogs
        id: cache-changelogs
        uses: actions/cache@v3
        with:
          path: /tmp/changelogs
          key: ${{ runner.os }}-dockerbuild-15.0-full-${{ hashFiles('**/slackware-15.0/ChangeLog*', '**/scripts/install_all.sh', '**/.github/workflows/15.0.yml', 'Dockerfile') }}-${{ github.run_id }}
          restore-keys: |
              ${{ runner.os }}-dockerbuild-15.0-full-${{ hashFiles('**/slackware-15.0/ChangeLog*', '**/scripts/install_all.sh', '**/.github/workflows/15.0.yml', 'Dockerfile') }}

      - name: Check status after cache hit
        if: steps.cache-changelogs.outputs.cache-hit == 'true'
        run: |
          echo "BUILD_IMAGE=0" >> $GITHUB_ENV

      - name: Check status after cache miss
        if: steps.cache-changelogs.outputs.cache-hit != 'true'
        run: |
          # the miss could just be a hit on a fallback
          mkdir -p /tmp/changelogs
          printf "%s\n" "${{ hashFiles('**/slackware-15.0/ChangeLog*', '**/scripts/install_all.sh', '**/.github/workflows/15.0.yml', 'Dockerfile') }}" > /tmp/changelogs/newkey
          touch /tmp/changelogs/key
          if diff /tmp/changelogs/newkey /tmp/changelogs/key > /dev/null ; then
            echo "BUILD_IMAGE=0" >> $GITHUB_ENV
          else
            echo "BUILD_IMAGE=1" >> $GITHUB_ENV
          fi
          mv /tmp/changelogs/newkey /tmp/changelogs/key

      - name: Run local mirror
        run: docker run -d --rm -v "$(pwd)/local_mirrors:/usr/share/nginx/html:ro" -p 3000:80 --name mirror nginx:alpine

      - name: Rsync adm64 repo
        if: env.BUILD_IMAGE == '1'
        run: |
          rm -rf local_mirrors/slack*
          bash scripts/sync_local_mirror.sh slackware64-15.0

      - name: Build amd64 image
        if: env.BUILD_IMAGE == '1'
        uses: docker/build-push-action@v3
        with:
          load: true
          platforms: linux/amd64
          build-args: |
            base_image=aclemons/slackware:15.0-base
            mirror_base=http://localhost:3000
          network: host
          context: .
          file: Dockerfile
          outputs: type=docker,dest=/tmp/slackware-amd64.tar
          tags: |
            slackware:15.0-full-amd64

      - name: Upload amd64 tarball
        if: env.BUILD_IMAGE == '1'
        uses: actions/upload-artifact@v3
        with:
          name: myimage
          path: /tmp/slackware-amd64.tar
          retention-days: 1

      - name: Stop the local mirror
        run: docker container stop mirror

  docker_full:
    needs: [docker_full_arm, docker_full_386, docker_full_amd64]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
        with:
          driver-opts: |
            network=host

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Fetch ChangeLogs
        run: |
          curl -s -f -o slackware-15.0/ChangeLog.txt.386 https://slackware.uk/slackware/slackware-15.0/ChangeLog.txt
          curl -s -f -o slackware-15.0/ChangeLog.txt.amd64 https://slackware.uk/slackware/slackware64-15.0/ChangeLog.txt
          curl -s -f -o slackware-15.0/ChangeLog.txt.arm https://slackware.uk/slackwarearm/slackwarearm-15.0/ChangeLog.txt

      - name: Cache Changelogs
        id: cache-changelogs
        uses: actions/cache@v3
        with:
          path: /tmp/changelogs
          key: ${{ runner.os }}-dockerbuild-15.0-full-${{ hashFiles('**/slackware-15.0/ChangeLog*', '**/scripts/install_all.sh', '**/.github/workflows/15.0.yml', 'Dockerfile') }}-${{ github.run_id }}
          restore-keys: |
              ${{ runner.os }}-dockerbuild-15.0-full-${{ hashFiles('**/slackware-15.0/ChangeLog*', '**/scripts/install_all.sh', '**/.github/workflows/15.0.yml', 'Dockerfile') }}

      - name: Check status after cache hit
        if: steps.cache-changelogs.outputs.cache-hit == 'true'
        run: |
          echo "BUILD_IMAGE=0" >> $GITHUB_ENV

      - name: Check status after cache miss
        if: steps.cache-changelogs.outputs.cache-hit != 'true'
        run: |
          # the miss could just be a hit on a fallback
          mkdir -p /tmp/changelogs
          printf "%s\n" "${{ hashFiles('**/slackware-15.0/ChangeLog*', '**/scripts/install_all.sh', '**/.github/workflows/15.0.yml', 'Dockerfile') }}" > /tmp/changelogs/newkey
          touch /tmp/changelogs/key
          if diff /tmp/changelogs/newkey /tmp/changelogs/key > /dev/null ; then
            echo "BUILD_IMAGE=0" >> $GITHUB_ENV
          else
            echo "BUILD_IMAGE=1" >> $GITHUB_ENV
          fi
          mv /tmp/changelogs/newkey /tmp/changelogs/key

      - name: Download arm artifact
        if: env.BUILD_IMAGE == '1'
        uses: actions/download-artifact@v3
        with:
          name: slackware-arm.tar
          path: /tmp

      - name: Load arm
        if: env.BUILD_IMAGE == '1'
        run: |
          docker load --input /tmp/slackware-arm.tar
          docker tag aclemons/slackware:15.0-full-arm localhost:5000/aclemons/slackware:15.0-full-arm
          docker rm image -f aclemons/slackware:15.0-full-arm
          docker push localhost:5000/aclemons/slackware:15.0-full-arm
          docker rm image -f localhost:5000/aclemons/slackware:15.0-full-arm

          rm /tmp/slackware-arm.tar

      - name: Download 386 artifact
        if: env.BUILD_IMAGE == '1'
        uses: actions/download-artifact@v3
        with:
          name: slackware-386.tar
          path: /tmp

      - name: Load 386
        if: env.BUILD_IMAGE == '1'
        run: |
          docker load --input /tmp/slackware-386.tar
          docker tag aclemons/slackware:15.0-full-386 localhost:5000/aclemons/slackware:15.0-full-386
          docker rm image -f aclemons/slackware:15.0-full-386
          docker push localhost:5000/aclemons/slackware:15.0-full-386
          docker rm image -f localhost:5000/aclemons/slackware:15.0-full-386

          rm /tmp/slackware-386.tar

      - name: Download amd64 artifact
        if: env.BUILD_IMAGE == '1'
        uses: actions/download-artifact@v3
        with:
          name: slackware-amd64.tar
          path: /tmp

      - name: Load amd64
        if: env.BUILD_IMAGE == '1'
        run: |
          docker load --input /tmp/slackware-amd64.tar
          docker tag aclemons/slackware:15.0-full-amd64 localhost:5000/aclemons/slackware:15.0-full-amd64
          docker rm image -f aclemons/slackware:15.0-full-amd64
          docker push localhost:5000/aclemons/slackware:15.0-full-amd64
          docker rm image -f localhost:5000/aclemons/slackware:15.0-full-amd64

          rm /tmp/slackware-amd64.tar

      - name: Build multiarch
        if: env.BUILD_IMAGE == '1'
        run: |
          docker buildx imagetools create --tag localhost:5000/slackware:15.0-full localhost:5000/slackware:15.0-full-arm localhost:5000/slackware:15.0-full-amd64 localhost:5000/slackware:15.0-full-386

      - name: Push Image to multiple registries
        if: env.BUILD_IMAGE == '1'
        uses: akhilerm/tag-push-action@v2.1.0
        with:
          src: localhost:5000/slackware:15.0-full
          dst: |
            ghcr.io/${{ github.repository_owner }}/slackware:15.0-full
            ghcr.io/${{ github.repository_owner }}/slackware:latest-full
            ${{ github.repository_owner }}/slackware:15.0-full
            ${{ github.repository_owner }}/slackware:latest-full

      - uses: geekyeggo/delete-artifact@v2
        with:
          failOnError: false
          name: |
            slackware-arm.tar
            slackware-386.tar
            slackware-amd64.tar
