---
name: Slackware Docker Images

on:
  workflow_dispatch:
  schedule:
    - cron: 0 3 * * *
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

concurrency:
  group: docker-${{ github.head_ref || github.ref_name }}
  cancel-in-progress: false

env:
  # renovate: datasource=docker depName=alpine versioning=loose
  ALPINE_IMAGE: 3.21.3@sha256:a8560b36e8b8210634f77d9f7f9efd7ffa463e380b75e2e74aff4511df3ef88c
  # renovate: datasource=docker depName=tonistiigi/binfmt versioning=loose
  BINFMT_IMAGE: qemu-v9.2.0@sha256:ea2f0dd74e74f101df59f9a6b31d0960994060c7982a921cbceecee0f1841125
  ARMEDSLACK_VERSIONS: '["12.2","13.1","13.37"]'
  SLACKWAREARM_VERSIONS: '["14.0","14.1","14.2","15.0"]'
  SLACKWAREAARCH64_VERSIONS: '["current"]'
  PRE_SLACKWARE64_VERSIONS: '["8.1","9.0","9.1","10.0","10.1","10.2","11.0","12.0","12.1","12.2"]'
  LATEST_VERSION: '15.0'
  REGISTRY_IMAGE: ${{ github.repository_owner }}/slackware

jobs:
  docker:
    strategy:
      matrix:
        version: ['8.1', '9.0', '9.1', '10.0', '10.1', '10.2', '11.0', '12.0', '12.1', '12.2', '13.0', '13.1', '13.37', '14.0', '14.1', '14.2', '15.0',
          current]
    runs-on: ubuntu-24.04
    permissions:
      packages: write
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          show-progress: false

      - name: Prep downloads
        run: |
          mkdir -p changelogs

      - name: Fetch slackware ChangeLog
        run: |
          curl -s -f -o changelogs/ChangeLog.txt.386 https://slackware.osuosl.org/slackware-${{ matrix.version }}/ChangeLog.txt

      - name: Fetch slackware64 ChangeLog
        if: false == contains(fromJson(env.PRE_SLACKWARE64_VERSIONS), matrix.version)
        run: |
          curl -s -f -o changelogs/ChangeLog.txt.amd64 https://slackware.osuosl.org/slackware64-${{ matrix.version }}/ChangeLog.txt

      - name: Fetch armedslack ChangeLog
        if: contains(fromJson(env.ARMEDSLACK_VERSIONS), matrix.version)
        run: |
          curl -s -f -o changelogs/ChangeLog.txt.arm https://slackware.uk/slackwarearm/armedslack-${{ matrix.version }}/ChangeLog.txt

      - name: Fetch slackwarearm ChangeLog
        if: contains(fromJson(env.SLACKWAREARM_VERSIONS), matrix.version)
        run: |
          curl -s -f -o changelogs/ChangeLog.txt.arm https://slackware.uk/slackwarearm/slackwarearm-${{ matrix.version }}/ChangeLog.txt

      - name: Fetch slackwareaarch64 ChangeLog
        if: contains(fromJson(env.SLACKWAREAARCH64_VERSIONS), matrix.version)
        run: |
          curl -s -f -o changelogs/ChangeLog.txt.arm https://slackware.uk/slackwarearm/slackwareaarch64-${{ matrix.version }}/ChangeLog.txt

      - name: Cache Base Tarballs
        id: cache-base-tarballs
        if: github.event_name != 'pull_request'
        uses: actions/cache@0c907a75c2c80ebcb7f088228285e798b750cf8f # v4.2.1
        with:
          path: base_tarballs/
          key: ${{ runner.os }}-base-tarballs-${{ matrix.version }}-${{ hashFiles('**/changelogs/ChangeLog*', '**/scripts/build_base_image.sh') }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3.6.0
        with:
          image: tonistiigi/binfmt:${{ env.BINFMT_IMAGE }}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@f7ce87c1d6bead3e36075b2ce75da1f6cc28aaca # v3.9.0

      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build slackware tarball
        if: github.event_name == 'pull_request' || steps.cache-base-tarballs.outputs.cache-hit != 'true'
        run: |
          docker run --privileged --security-opt apparmor:unconfined --rm \
            -e RELEASENAME="slackware" -e ARCH="i586" -e VERSION=${{ matrix.version }} -e CHOWN_TO="$(id -u):$(id -g)" \
            -v "$(pwd):/data" -v "$(pwd)/scripts:/scripts" alpine:${{ env.ALPINE_IMAGE }} \
            sh /scripts/build_base_image.sh

          cp slackware-${{ matrix.version }}.tar base_tarballs/

      - name: Build slackware64 tarball
        if: (github.event_name == 'pull_request' || steps.cache-base-tarballs.outputs.cache-hit != 'true') && false == contains(fromJson(env.PRE_SLACKWARE64_VERSIONS),
          matrix.version)
        run: |
          docker run --privileged --security-opt apparmor:unconfined --rm \
            -e RELEASENAME="slackware64" -e ARCH="x86_64" -e VERSION=${{ matrix.version }} -e CHOWN_TO="$(id -u):$(id -g)" \
            -v "$(pwd):/data" -v "$(pwd)/scripts:/scripts" alpine:${{ env.ALPINE_IMAGE }} \
            sh /scripts/build_base_image.sh

          cp slackware64-${{ matrix.version }}.tar base_tarballs/

      - name: Build armedslack tarball
        if: (github.event_name == 'pull_request' || steps.cache-base-tarballs.outputs.cache-hit != 'true') && contains(fromJson(env.ARMEDSLACK_VERSIONS),
          matrix.version)
        run: |
          CHECKSUMS="yes"

          if [ "${{ matrix.version }}" = "13.1" ] ; then
            CHECKSUMS="yes-no-checksums-gpg"
          fi

          docker run --privileged --security-opt apparmor:unconfined --rm \
            -e CHECKSUMS="$CHECKSUMS" \
            -e RELEASENAME="armedslack" -e ARCH="arm" -e VERSION=${{ matrix.version }} -e CHOWN_TO="$(id -u):$(id -g)" \
            -v "$(pwd):/data" -v "$(pwd)/scripts:/scripts" alpine:${{ env.ALPINE_IMAGE }} \
            sh /scripts/build_base_image.sh

          mv armedslack-${{ matrix.version }}.tar slackwarearm-${{ matrix.version }}.tar
          cp slackwarearm-${{ matrix.version }}.tar base_tarballs/

      - name: Build slackwarearm tarball
        if: (github.event_name == 'pull_request' || steps.cache-base-tarballs.outputs.cache-hit != 'true') && contains(fromJson(env.SLACKWAREARM_VERSIONS),
          matrix.version)
        run: |
          CHECKSUMS="yes"

          if [ "${{ matrix.version }}" = "14.1" ] ; then
            CHECKSUMS="yes-no-checksums-gpg"
          fi

          docker run --privileged --security-opt apparmor:unconfined --rm \
            -e CHECKSUMS="$CHECKSUMS" \
            -e RELEASENAME="slackwarearm" -e ARCH="arm" -e VERSION=${{ matrix.version }} -e CHOWN_TO="$(id -u):$(id -g)" \
            -v "$(pwd):/data" -v "$(pwd)/scripts:/scripts" alpine:${{ env.ALPINE_IMAGE }} \
            ./scripts/build_base_image.sh

          cp slackwarearm-${{ matrix.version }}.tar base_tarballs/

      - name: Build slackwareaarch64 tarball
        if: (github.event_name == 'pull_request' || steps.cache-base-tarballs.outputs.cache-hit != 'true') && contains(fromJson(env.SLACKWAREAARCH64_VERSIONS),
          matrix.version)
        run: |
          docker run --privileged --security-opt apparmor:unconfined --rm \
            -e RELEASENAME="slackwareaarch64" -e ARCH="aarch64" -e VERSION=${{ matrix.version }} -e CHOWN_TO="$(id -u):$(id -g)" \
            -v "$(pwd):/data" -v "$(pwd)/scripts:/scripts" alpine:${{ env.ALPINE_IMAGE }} \
            sh /scripts/build_base_image.sh

          cp slackwareaarch64-${{ matrix.version }}.tar base_tarballs/

      - name: Restore prerequisites
        if: github.event_name != 'pull_request' && steps.cache-base-tarballs.outputs.cache-hit == 'true'
        run: |
          cp base_tarballs/*tar .

      - name: Compute docker platforms
        run: |
          VERSION="${{ matrix.version }}" ./.github/workflows/bin/configure_docker_platforms.sh

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@369eb591f429131d6889c46b94e711f089e6ca96 # v5.6.1
        with:
          images: |
            ${{ env.REGISTRY_IMAGE }}
          tags: |
            type=raw,value=${{ matrix.version }}
            type=raw,value=latest,enable=${{ matrix.version == env.LATEST_VERSION }}

      - name: Build and push
        if: github.event_name != 'pull_request' && steps.cache-base-tarballs.outputs.cache-hit != 'true'
        uses: docker/build-push-action@0adf9959216b96bec444f325f1e493d4aa344497 # v6.14.0
        with:
          push: true
          platforms: ${{ env.docker_platforms }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          context: .
          file: Dockerfile
          build-args: |
            VERSION=${{ matrix.version }}
          labels: ${{ steps.meta.outputs.labels }}
          tags: ${{ steps.meta.outputs.tags }}

      - name: Build and test docker
        if: github.event_name == 'pull_request'
        uses: docker/build-push-action@0adf9959216b96bec444f325f1e493d4aa344497 # v6.14.0
        with:
          push: false
          load: false
          platforms: ${{ env.docker_platforms }}
          context: .
          file: Dockerfile
          build-args: |
            VERSION=${{ matrix.version }}
          labels: ${{ steps.meta.outputs.labels }}
          tags: ${{ steps.meta.outputs.tags }}
